Q: How did viewing a diff between two versions of a file help you see the bug that was introduced?

Two parallel portions of the same file were placed next to each other for comparison, and the differences could easily be determined and the bug could be corrected.

Q: How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

By analyzing the different versions of the file from its history, one can understand how changes were made in order to eliminate bugs and enhance the file's functionality. Likewise, in the realm of programming the same practice can be undertaken to enhance code functionality and efficiency.

Q: What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Manually - Pros: Commit when need arises, which is beneficial for large and complex projects where a lot of bugs arise, some which may be easy to eliminate while others may be difficult - performing commits for every difficult bug fixed and for a number of easy bugs fixed. . .at times the criteria for defining the complexity of changes behind a commit is subjective and is quite incumbent upon the developer.

Manually - Cons: For projects with a predictable flow of development, automatic commits are more preferable.

Q: Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Git comprises of code repositories in which changes to one file may affect other files in the repository more often than, say in Google Docs.

Q: How can you use the commands git log and git diff to view the history of files?

git log - get the commit ids of various commits to determine what changes have been made in each commit

git diff - determine what changes (insertions/deletions) have been made from one commit to another


Q: How might using version control make you more confident to make changes that could break something?

Knowing that it is very much possible to revert to an older version of the code/file, it gives the developer more confidence to make changes that could break something - Iâ€™m not afraid to take risks anymore!!!

Q:Now that you have your workspace set up, what do you want to try using Git for?

For my programming assignments, projects (school and Udacity and others)!!! Very good, sir. For sure, sir.